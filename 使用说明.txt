1、将录制好的air脚本放到air目录下
2、编辑conf/settings.py，配置设备信息、应用类型等，里面基本都会用到最好不改动key只改变value就行
3、在项目目录下运行python runCase.py即可运行
4、在runCase中的run_air包含了查找用例，清理log和report的功能。
5、实际运行用例命令run_script(args)
6、暂时未实现替换源码的run_script(args) 所以请先进入run_script(args)源码中把sys.exit(-1)改成raise AssertionError，否则一条用例执行失败后就会退出运行了。
7、data.ini文件区分了UAT和SIT环境的账号密码，也包含了安卓授权权限名（这个是为了清除缓存并且直接授权，也可以不用这个步骤，让开发打个退出app再次打开就进入到特定页面也可以，我这边的app比较麻烦只能这样设计）。
注意：我这里用的airtest是1.2.3 如果老版本的话不保证能运行成功

运行思路：
0. connect_check_package进行设备链接，判断是否已安装包，如果有的话会校验版本号，如果没有安装包或者版本号不匹配调用方法
check_install_local_package，该方法会去校验本地包，find_package方法会传入安装包的文件名，然后判断本地包版本是否与预期版本号一直，如果不一致，直接退出运行，
如果一致，则安装包
1. 查询到用例库，air_device_dir方法判断device是ios还是安卓
2. log_report_file_exist判断是否需要清理report和air log（用例执行的log）
3. 读取到用例文件后，进行循环遍历跑脚本
4. clear_dataAndgrant_permissionAndkill_all_service 由于项目设计登录很麻烦，这个方法
可以让我们先去清理app缓存，保持app缓存为新安装app，然后再去默认授权，并且也会清理所有设备后台运行的程序，确保设备的流畅（只适用于安卓设备）
5. start_app 启动app
6. run_script开始执行用例
7. 集成所有log并且生成一个report文件。

airtest 官方文档
https://airtest.doc.io.netease.com/
附加功能：
darkAndlight 检测亮度峰值 判断颜色改变

额外说明：
ios的控制需要额外安装tidevice 可以通过pip install tidevice进行安装，先需要下载pip install setuptools如果不行就先uninstall再install

ios需要先安装tidevice和webdriveragent（facebook）可以让ios开发打一下 （https://airtest.doc.io.netease.com/IDEdocs/device_connection/4_ios_connection/）
需要提供所有测试机的udid，可以直接使用tidevice list命令获取

安卓最好自己手动安装下adb并且配置环境变量，可以参考https://blog.csdn.net/weixin_37600187/article/details/127987889?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170900460416800225525595%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170900460416800225525595&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-127987889-null-null.142^v99^pc_search_result_base8&utm_term=adb%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187